---
# see the best practices in ansible docs for how to get started with creating roles etc.:
# https://docs.ansible.com/ansible/latest/user_guide/playbooks_best_practices.html

- hosts: localhost
  vars_files:
    - jenkins-creds.yml

  tasks:
    - name: install openjdk08
      apt:
        name: openjdk-8-jdk
        update_cache: yes
      become: yes

    - name: get and apply the jenkins repository public key
      apt_key:
        url: https://pkg.jenkins.io/debian/jenkins.io.key
        state: present
      become: yes

    - name: Create directory for jenkins binary source location
      file:
        path: /etc/apt/sources.list.d
        state: directory
      become: yes

    - name: Template the jenkins binary source location file
      template:
        src: jenkins_binary
        dest: /etc/apt/sources.list.d/jenkins.list
        owner: bin
        mode: u=rwx,g=r,o=r
      become: yes

    - name: Run the equivalent of "apt-get update" as a separate step
      apt:
        update_cache: yes
      become: yes

    - name: install jenkins server
      apt:
        name: jenkins
        update_cache: yes
      become: yes

    - name: Set jenkins server to expose on port 9000
      replace:
        path: /etc/default/jenkins
        regexp: 'HTTP_PORT=8080'
        replace: 'HTTP_PORT=9000'
      become: yes

    - name: Create the jenkins post configuration directory
      file:
        path: /var/lib/jenkins/init.groovy.d
        state: directory
      become: yes

    - name: Template the post configuration script to post configuration directory
      template:
        src: jenkins_config
        dest: /var/lib/jenkins/init.groovy.d/basic-security.groovy
        owner: bin
        mode: u=rwx,g=r,o=r
      become: yes

    - name: find the admin config file directory
      find:
        paths: /var/lib/jenkins/users
        recurse: no
        use_regex: true
        patterns: '^admin'
        file_type: directory
      register: admin_directory
      become: yes

    - name: Set password for admin user
      replace:
        path: "{{ admin_directory.files[0].path }}/config.xml"
        regexp: '<passwordHash>#jbcrypt:\S+</passwordHash>'
        replace: "<passwordHash>#jbcrypt:{{ admin_password_hash }}</passwordHash>"
      become: yes

    - name: restart jenkins
      systemd:
        state: restarted
        name: jenkins
      become: yes

    - name: Wait for Jenkins to start up
      uri:
        url: http://192.168.33.20:9000
        status_code: 200
        user: admin
        password: "{{ admin_password }}"
        timeout: 5
        force_basic_auth: yes
      register: jenkins_service_status
      retries: 10
      delay: 5
      until: >
        'status' in jenkins_service_status and
        jenkins_service_status['status'] == 200

    - name: Check Jenkins status
      debug:
        msg: "Jenkins status: {{ jenkins_service_status['status'] }}"

    - name: Install plugin
      jenkins_plugin:
        name: workflow-aggregator
        state: present
        force: yes
        timeout: 300
        url: http://192.168.33.20:9000
        url_username: admin
        url_password: "{{ admin_password }}"
      when: jenkins_service_status['status'] == 200
      become: yes

    - name: restart jenkins
      systemd:
        state: restarted
        name: jenkins
      become: yes