---
- name: find the admin config file directory
  find:
    paths: /var/lib/jenkins/users
    recurse: no
    use_regex: true
    patterns: '^admin'
    file_type: directory
  register: admin_directory
  become: yes

- name: Set password for admin user
  replace:
    path: "{{ admin_directory.files[0].path }}/config.xml"
    regexp: '<passwordHash>#jbcrypt:\S+</passwordHash>'
    replace: "<passwordHash>#jbcrypt:{{ admin_password_hash }}</passwordHash>"
  become: yes

- name: Set jenkins server to expose on port 9000
  replace:
    path: /etc/default/jenkins
    regexp: 'HTTP_PORT=8080'
    replace: 'HTTP_PORT=9000'
  become: yes

- include: reload-jenkins.yml

- name: Install plugin
  jenkins_plugin:
    name: "{{ item }}"
    state: present
    force: yes
    timeout: 300
    url: http://192.168.33.20:9000
    url_username: admin
    url_password: "{{ admin_password }}"
  when: jenkins_service_status['status'] == 200
  become: yes
  with_items:
    - workflow-aggregator
    - nodejs
    - git

- include: reload-jenkins.yml

- name: Update pipelines
  shell: "/bakerx/cm/update-pipelines.sh"

- name: Wait until the file pipeline config files are present before continuing
  wait_for:
    path: "{{ item }}"
  with_items:
    - /var/lib/jenkins/jobs/checkbox.io/config.xml
    - /var/lib/jenkins/jobs/iTrust/config.xml

- name: Set token for checkbox.io and Itrust pipeline jobs
  replace:
    path: "{{ item }}"
    regexp: '<keepDependencies>false<\/keepDependencies>\s+<properties>'
    replace: "<keepDependencies>false</keepDependencies>\n  <authToken>{{jenkins_token}}</authToken>\n  <properties>"
  with_items:
    - /var/lib/jenkins/jobs/checkbox.io/config.xml
    - /var/lib/jenkins/jobs/iTrust/config.xml
  become: yes

- name: Update pipelines
  shell: "/bakerx/cm/update-pipelines.sh"

- name: Save github credential
  shell: "/bakerx/cm/post-credential.sh github {{ GH_USER }} {{ GH_PASS }}"

- name: Save mysql credential
  shell: "/bakerx/cm/post-credential.sh mysql root {{ mysql_root_password }}"

- name: Save smtp credential
  shell: "/bakerx/cm/post-credential.sh smtp {{ smtp_username }} {{smtp_password }}"

- name: Populate /etc/environment; these variables are needed by the `useful-tests` command
  become: yes
  lineinfile:
    dest: "/etc/environment"
    state: present
    regexp: "^{{ item.key }}="
    line: "{{ item.key }}={{ item.value}}"
  no_log: true
  with_items:
    - key: GH_USER 
      value: "{{ GH_USER }}"
    - key: GH_PASS 
      value: "{{ GH_PASS }}"
    - key: mysql_root_password
      value: "{{ mysql_root_password }}"
    - key: smtp_username
      value: "{{ smtp_username }}"
    - key: smtp_password
      value: "{{ smtp_password }}"
    - key: MAVEN_OPTS
      value: '"-Xmx1024m -XX:MaxPermSize=128m"'